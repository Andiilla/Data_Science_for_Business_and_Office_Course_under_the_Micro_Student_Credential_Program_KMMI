library(tidyverse)
ggplot2::ggplot
ggplot2::mpg
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))
ggplot(data=mpg)+geom_point(mapping=aes(x=displ,y=hwy))
function(ggplot)
geom_mapping=aes(x=displ,y=hwy)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))
install.packages("tidyverse")
library(tidyverse)
ggplot2::ggplot
ggplot2::mpg
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy,color=class))
ggplot(data=mpg)+
geom_point(mapping = aes(x=displ,y=hwy,size=class))
ggplot(data=mpg)+
geom_point(mapping = aes(x=displ,y=hwy),color="red")
#facet
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))+
facet_wrap(~class,ncol = 3)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))+
facet_grid(drv~cyl)
#multiple geoms in the same plot
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))+
geom_smooth(mapping = aes(x=displ,y=hwy),color="red")
ggplot()+
geom_point(data=mpg,mapping=aes(x=displ,y=hwy))+
geom_smooth(data=mpg,mapping = aes(x=displ,y=hwy))
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
geom_point(mapping=aes(color=class))+
geom_smooth(color="red")
data=diamonds
data
?diamonds
diamonds %>% + count(cut)
diamonds %>% +count(cut)
diamonds %>%
count(cut)
diamonds %>%
+ count(cut)
#Histogram
ggplot(data=diamonds)+
geom_histogram(mapping = aes(x=carat),bindwith=0.25)
diamonds %>)%
+ count(cut_width(carat, 0.25))
diamonds %>%
+     + count(cut_width(carat, 0.25))
diamonds %>%
count(cut_width(carat,0.25))
smaller <- diamonds %>%
filter(carat<3)
smaller
ggplot(data=smaller,mapping = aes(x=carat))+
geom_histogram(binwidth = 0.1)
ggplot(data=smaller,mapping = aes(x=carat,colour=cut))+
geom_freqpoly(bindwidth=0.1)
ggplot(diamonds)+
geom_histogram(mapping = aes(x=y),binwidth = 0.5)+
coord_cartesian(ylim = c(0,50))
+ coord_cartesian(ylim = c(0,50)
un
library(tidyverse)
ggplot(data=mpg)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))
library(tidyverse)
library(tidyverse)
ggplot(data=mpg)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy))
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy),colour=red)
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy),colour=class)
ggplot2::mpg
mpg
?drv
??drv
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))
library(tidyverse)
ggplot::ggplot()
library(tidyverse)
ggplot2::ggplot()
ggplot2::mpg
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document", echo=TRUE)
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/adminstrator/Downloads/Latihan Mandiri-dikonversi.docx", encoding = 'UTF-8')
source("~/.active-rstudio-document", echo=TRUE)
tab <- ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "green"))
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy),color="green")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "green"))
str(mpg)
tab <- str(mpg)
view tab
ggplot2::mpg
strg(mpg)
str(mpg)
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,hwy),color="green")
?mpg
str(mpg)
?geom
??Geom
geom_line
?geom_line()
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/adminstrator/Downloads/Latihan Mandiri-dikonversi.docx", encoding = 'UTF-8')
ggplot(data=mpg)+
geom_point(mapping=aes(x=cyl,y=hwy),color="green")
library(tidyverse)
ggplot2::ggplot()
ggplot2::mpg
ggplot(data=mpg)+
geom_point(mapping=aes(x=displ,y=hwy),color="green")
ggplot(data=mpg)+
geom_line(mapping=aes(x=displ,y=hwy),color="green")
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth()
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth(se=FALSE)
str(mpg)
?cty
??cty
??mpg
?str(mpg)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(data=mpg,mapping=aes(x=displ,y=hwy,color=drv)) +
geom_point() +
geom_smooth()
?mpg
sumary(select(diamonds, x,y,z))
summary(select(diamonds, x,y,z))
>ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.01)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.01)
ggplot2::mpg
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.01)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.01)
filter(diamonds, x == 0 | y == 0 | z == 0)
diamonds %>%  +
arrange(desc(y)) %>%
+     head()
+     head()
diamonds %>%  +
arrange(desc(y)) %>%
+     head()
filter(diamonds, x == 0 | y == 0 | z == 0)
diamonds %>%  +
+     arrange(desc(y)) %>%
+     head() # A
diamonds %>%  +
+     arrange(desc('y')) %>%
+     head() # A
diamonds %>%  +
+     arrange(desc'y') %>%
+     head() # A
ggplot(diamonds, aes(x = x, y = y)) +
geom_point()
library(Hmisc)
install.packages("Hmisc")
library(mvShapiroTest)
library(Hmisc)
install.packages("mvShapirotest")
library(MVTests)
install.packages("MVTests")
install.packages("MASS")
install.packages("rrcov")
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk
dt.disk<-dt.disk[1:40,]
dt.disk1<-dt.disk[1:40,]
dt.disk2<-dt.disk[41:50,]
dt.disk1
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
uji.multi
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk<-dt.disk[1:40,]
dt.disk1<-dt.disk[1:40,]
dt.disk2<-dt.disk[41:50,]
dt.disk1
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
View(dt.disk)
View(dt.disk)
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk1<-dt.disk[1:40,]
dt.disk2<-dt.disk[41:50,]
dt.disk1
View(dt.disk)
View(dt.disk)
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk1<-dt.disk[1:30,]
dt.disk2<-dt.disk[31:40,]
dt.disk1
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk1<-dt.disk[1:40,]
dt.disk2<-dt.disk[41:50,]
dt.disk1
View(dt.disk)
View(dt.disk)
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
library(mvShapiroTest)
install.packages("mvShapiroTest")
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
??recorr
dt.disk<-read.csv(file.choose(),header = T,sep = ",",dec = ",")
dt.disk<-read.delim(),head()
library(Hmisc)
library(mvShapiroTest)
library(MVTests)
library(MASS)
library(rrcov)
dt.disk<-read.csv(file.choose(),header=T,sep=",",dec=".")
dt.disk1<-dt.disk[1:40,]
dt.disk2<-dt.disk[41:50,]
dt.disk1
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
uji.mult
uji.multi
uji.multi<-rcorr(as.matrix(dt.disk1[,-5],type="pearson"))
uji.multi
x <- dt.disk1[,-5] > cm <- colMeans(x)
x <- dt.disk1[,-5]
cm <- colMeans(x)
S <- cov(x)
d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10), +
sd <- sort(d), +
xlab = expression(paste(chi[10]^2, " Quantile")), +
ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
??Ordered distances
?Ordered distances
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10?), +
sd <- sort(d), +
xlab = expression(paste(chi[10]^2, " Quantile")), +
ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
x <- dt.disk1[,-5] > cm <- colMeans(x) > S <- cov(x) > d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm)) > plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 4), + sd <- sort(d), + xlab = expression(paste(chi[4]^2, " Quantile")), + ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
plot(qc<-qchisq(1:nrow(x)-1/2)/nrow(x),df=10),
+ sd<-sort(d),+
plot(qc<-qchisq(1:nrow(x)-1/2)/nrow(x),df=10),
plot(qc<-qchisq(1:nrow(x)-1/2)/nrow(x),df=10),
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10), +
sd <- sort(d), +
xlab = expression(paste(chi[10]^2, " Quantile")), +
ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
plot(qc<-qchisq((1nrow(x)-1/2)/nrow(x),df=10)),
+sd<-sort(d),
+xlab=expression(paste(chi[10]^2,"Quantile")),
+ylab="Ordered Distances",xlim=range(qc)*c(1,1.1)
plot(qc<-qchisq((1nrow(x)-1/2)/nrow(x),df=10)),
+ sd<-sort(d),
+ xlab=expression(paste(chi[10]^2,"Quantile")),
+ ylab="Ordered Distances",xlim=range(qc)*c(1,1.1)
plot(qc<-qchisq((1:nrow(x)-1/2)/nrow(x),df=10)),
+ sd<-sort(d),
+ xlab=expression(paste(chi[10]^2,"Quantile")),
+ ylab="Ordered Distances",xlim=range(qc)*c(1,1.1)
plot(qc<-qchisq((1:nrow(x)-1/2)/nrow(x),df=10),
+ xlab=expression(paste(chi[10]^2,"Quantile")),
ylab="Ordered Distances",xlim=range(qc)*c(1,1.1)
ylab=("Ordered Distances"), xlim=range(qc)*c(1,1.1)
library(MVN)
install.packages(MVN)
x <- dt.disk1[,-5]
> cm <- colMeans(x)
> S <- cov(x)
> d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))
> plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
+ sd <- sort(d), + xlab = expression(paste(chi[10]^2, " Quantile")),
+ ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
x <- dt.disk1[,-5] > cm <- colMeans(x)
> S <- cov(x)
> d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))
> plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
+ sd <- sort(d), + xlab = expression(paste(chi[10]^2, " Quantile")),
+ ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
x <- dt.disk1[,-5]
cm <- colMeans(x)
S <- cov(x)
d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
sd <- sort(d), + xlab = expression(paste(chi[10]^2, " Quantile")),
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
sd <- sort(d),
xlab(expression(paste(chi[10]^2), "Quantile")),
ylab = "Ordereb distances", xlim = range(qc)*c(1,1.1))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
+ sd <- sort(d),
+ xlab(expression(paste(chi[4]^2), "Quantile")),
+ ylab = "Ordereb distances", xlim = range(qc)*c(1,1.1))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
+ sd <- sort(d),
+ xlab(expression(paste(chi[10]^2), "Quantile")),
+ ylab = "Ordereb distances", xlim = range(qc)*c(1,1.1))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
sd <- sort(d),
xlab(expression(paste(chi[10]^2), "Quantile")),
ylab = "Ordereb distances", xlim = range(qc)*c(1,1.1))
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
sd <- sort(d),
xlab = expression(paste(chi[10]^2), "Quantile")),
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 10),
sd <- sort(d),
xlab = (expression(paste(chi[10]^2), "Quantile")),
ylab = "Ordereb distances", xlim = range(qc)*c(1,1.1))
> uji.mvn<-mvShapiro.Test(as.matrix(dt.disk1[,-5]))
uji.mvn<-mvShapiro.Test(as.matrix(dt.disk1[,-5]))
uji.mvn
uji.KMV<-BoxM(dt.disk1[,-5],dt.disk1[,5])
uji.KMV
uji.KMV<-BoxM(dt.disk1[,-11],dt.disk1[,11])
uji.KMV
View(dt.disk)
View(dt.disk)
uji.KVM<-manova(cbind(Bersih,Harga,Kasir,Lengkap,AC,Diskon,Parkir,Belanja,Staf,Citra)~minum,data=dt.disk1)
uji.KVM<-manova(cbind(Bersih,Harga,Kasir,Lengkap,AC,Diskon,Parkir,Belanja,Staf,Citra)~Belanja,data=dt.disk1)
summary(uji.KVM)
uji.KVM<-manova(cbind(Bersih,Harga,Kasir,Lengkap,AC,Diskon,Parkir,Staf,Citra)~Belanja,data=dt.disk1)
summary(uji.KVM)
model.disk<-lda(Belanja~Bersih+Harga+Kasir+Lengkap+AC+Diskon+Parkir+Staf+Citra,data=dt.disk1)
model.disk<-lda(Belanja~Bersih+Harga+Kasir+Lengkap+AC+Diskon+Parkir+Staf+Citra,data=dt.disk1)
model.disk<-lda(Belanja~Bersih+Harga+Kasir+Lengkap+AC+Diskon+Parkir+Staf+Citra,data = dt.disk1)
model.disk
plot(model.disk)
lda.klasik<-LdaClassic(dt.disk1[,-5],dt.disk1[,5])
pred.klas<-predict(lda.klasik)
pred.klas
dt.baru<-dt.disk2[,-5]
pred.class<-predict(model.disk,dt.baru)$class
cbind(dt.baru,pred.class
dt.baru<-dt.disk2[,-5]
dt.baru<-dt.disk2[,-5]
pred.class<-predict(model.disk,dt.baru)$class
pred.class<-predict(model.disk,dt.baru)$klas
pred.klas<-predict(model.disk,dt.baru)$klas
pred.class<-predict(model.disk,dt.baru)$class
dt.baru<-dt.disk2[,-5]
View(dt.baru)
pred.class<-predict(model.disk,dt.baru)$class
View(dt.disk2)
View(dt.disk)
dt.baru<-dt.disk2[,-6]
dt.baru<-dt.disk1[,-5]
pred.class<-predict(model.disk,dt.baru)$class
pred.class<-predict(model.disk,dt.baru)$class
View(dt.baru)
dt.baru<-dt.disk1[-5,]
pred.class<-predict(model.disk,dt.baru)$class
cbind(dt.baru,pred.class)
list.files()
list.files()
file.list()
file.list()
file.list()
list.file()
list.file()
list.files()
View(dt.disk)
library(tydiverse)
library(tidyverse)
library(diplyr)
library(dplyr)
library(tseries)
help("tseries")
intall.packages('tseries')
install.packages("tseries")
help("tseries")
??tseries
install.packages("tseries")
library(tidyverse)
library(dplyr)
library(tseries)
library(lmtest)
library(normtest)
library(nortest)
Datajual <- read.csv(file = "data.csv", header = FALSE, sep = ";")
Datajual <- read.csv(file = "data.csv", header = TRUE, sep = ";")
Illa <- read.csv(file = "data.csv", header = TRUE, sep = ";")
Illa <- read.csv(file = "data1.csv", header = TRUE, sep = ";")
library(tidyverse)
library(dplyr)
library(tseries)
library(forecast)
library(lmtest)
library(normtest)
library(nortest)
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data<-read.csv(file="data1.csv",header = TRUE, sep = ";")
data<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1
head(data1)
tail(data1)
datajual <- data1$Zt
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
data1<-read.csv(file="data.csv",header = TRUE, sep = ";")
library(tseries)
library(forecast)
library(lmtest)
library(normtest)
library(nortest)
setwd("C:/Users/adminstrator/Downloads/ANDI ILLA ERVIANI NENSI/KMMI DS02/M12 Time Series Musiman")
data <- read.csv("data.csv", sep = ";")
data
head(data)
tail(data)
Penumpang <- data$Zt
Bulan <- data$t
ts.plot(Penumpang)
adf.test(Penumpang)
BoxCox.lambda(Penumpang)
logP <- log(Penumpang)
logP
ts.plot(logP)
acf(logP, lag.max = 56)
par(mfrow=c(1,2))
acf(logP, lag.max = 70)
pacf(logP, lag.max = 70)
differencing1 <- diff(logP, differences = 1)
differencing1
ts.plot(differencing1)
differencing2 <- diff(differencing1, differences = 1)
differencing2
ts.plot(differencing2)
differencing3 <- diff(differencing2, differences = 1)
differencing3
ts.plot(differencing3)
differencing4 <- diff(differencing3, differences = 1)
differencing4
ts.plot(differencing4)
acf(differencing1, lag.max=70)
adf.test(differencing1)
diffnonmus_mus12 <- diff(differencing1, lag = 12)
diffnonmus_mus12
ts.plot(diffnonmus_mus12)
adf.test(diffnonmus_mus12)
par(mfrow=c(1,2))
acf(diffnonmus_mus12, lag.max = 70)
pacf(diffnonmus_mus12, lag.max = 70)
fit3 <- arima(logP, order = c(0,1,1), seasonal = list(order=c(0,1,1),period=12),method = "ML")
fit3
coeftest(fit3)
Box.test(fit3$residuals, type="Ljung")
shapiro.test(fit3$residuals)
sf.test(fit3$residuals)
forecasting<-forecast(logP, model=fit3, h=12)
forecasting
plot(forecasting, main = "Plot Hasil Peramalam")
